/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication4;

import java.sql.*;
import java.util.Arrays;
import javax.swing.JOptionPane;
import org.mindrot.jbcrypt.BCrypt;

/**
 *
 * @author Admin
 */
public class HomePage extends javax.swing.JFrame {

    public static Connection conn=null;
    public static Integer staffId=null;
    // declare jdbc driver and jdbc URL here and then pass them to getRemoteConnection on start
    private String dbDriver = "com.microsoft.sqlserver.jdbc.SQLServerDriver"; 
    
//    private static String dbURL = "jdbc:sqlserver://DESKTOP-AFJQMNH;databaseName=thursday;username=sa;password=ca400";
//    private static String dbURL = "jdbc:sqlserver://L125-04;databaseName=WMS;username=sa;password=12345678";
    private static String dbURL = "jdbc:sqlserver://DESKTOP-DHB3GRA:1433;databaseName=TEST;username=sa;password=ca400";
//    private static String dbURL= "jdbc:sqlserver://database-1.chx79b5ss8ae.us-east-1.rds.amazonaws.com:1433;user=adminUsername;password=adminPassword;databaseName=AWSWMS";
    protected static Integer [] adminStaffTypes;
    protected static Integer [] nurseStaffTypes;
        
    /**
     * Creates new form HomePage
     */
    public HomePage() {
        initComponents();
        conn = getRemoteConnection(dbDriver, dbURL);
        populateAdminStaffTypes();
        populateNurseStaffTypes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        usernameField = new javax.swing.JTextField();
        usernameLabel = new javax.swing.JLabel();
        loginButton = new javax.swing.JButton();
        passwordLabel = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1500, 800));

        bg.setBackground(new java.awt.Color(204, 204, 204));

        jPanel1.setBackground(new java.awt.Color(45, 118, 232));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication4/images/icons8_workstation_32px_1.png"))); // NOI18N
        jLabel1.setText("CA400");

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication4/images/icons8_help_32px.png"))); // NOI18N
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(50, 50, 50))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel7))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("Login to your Account");

        usernameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameFieldActionPerformed(evt);
            }
        });

        usernameLabel.setText("Username:");

        loginButton.setText("Login");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        passwordLabel.setText("Password:");

        passwordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(132, 132, 132)
                        .addComponent(jLabel4))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(157, 157, 157)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(loginButton, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                            .addComponent(usernameField, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                            .addComponent(usernameLabel)
                            .addComponent(passwordLabel)
                            .addComponent(passwordField))))
                .addContainerGap(129, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(usernameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(passwordLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(loginButton)
                .addContainerGap(266, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("WORKLOAD MEASUREMENT SYSTEM");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("DESIGNED FOR OPTIMUM NURSE MANAGEMENT");

        javax.swing.GroupLayout bgLayout = new javax.swing.GroupLayout(bg);
        bg.setLayout(bgLayout);
        bgLayout.setHorizontalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bgLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(174, Short.MAX_VALUE))
        );
        bgLayout.setVerticalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bgLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    protected static Connection getRemoteConnection (String dbDriver, String dbURL){
    try {
        Class.forName(dbDriver);            // Returns the Class object associated with the interface that has the given string name
        Driver d = DriverManager.getDriver(dbURL);  // Attempts to locate a driver that understands the given URL. 
        System.out.println(d.acceptsURL(dbURL)); // Retrieves whether the driver thinks that it can open a connection to the given URL.
        // these two lines are added in here to debug the test of this method
        // driver is registered but the dbURL is causing the problem I believe
        // leaving these comments here so i can remember what the problem is when i come back to it
        System.out.println("trying to establish connection to: " +  dbURL);
        Connection conn = DriverManager.getConnection(dbURL);
        System.out.println("Succesfully connected to: " +  dbURL);
      
        DatabaseMetaData dm = (DatabaseMetaData) conn.getMetaData();
        System.out.println("Driver name: " + dm.getDriverName());
        System.out.println("Driver version: " + dm.getDriverVersion());
        System.out.println("Product name: " + dm.getDatabaseProductName());
        System.out.println("Product version: " + dm.getDatabaseProductVersion());

        return conn;
    }
    catch (ClassNotFoundException cnf) {
            System.out.println("ClassNotFoundException:::::::::::" + cnf.getMessage());
        }  
        catch (SQLException ex) {
            System.out.println("SQL EXception::::::" + ex.getMessage());
        }
    return null;
  }
    
    private void usernameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameFieldActionPerformed

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        // TODO add your handling code here:
        //************ ADD USER MANUAL WINDOW************
    }//GEN-LAST:event_jLabel7MouseClicked

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        // TODO add your handling code here:
        // https://docs.oracle.com/javase/tutorial/uiswing/components/passwordfield.html
        String user = usernameField.getText();
        char[] pass = passwordField.getPassword();
        
        if(user.isEmpty() || pass.length == 0) {
            JOptionPane.showMessageDialog(this, "Please enter a username and password.");
        }
        
        else if (isPasswordCorrect(conn, user, pass)) {
            Integer staffPermissions = getStaffType(conn, user);    
            // isPwCorrect calls get staff type to see if it matches pw
            // we call get staff type again now to see which screen we dispay to the user depending on who the user is 
            if (staffPermissions != 0 && Arrays.asList(adminStaffTypes).contains(staffPermissions)) {
//                JOptionPane.showMessageDialog(this, "You typed the correct password. You will now be logged in with admin permissions.");
                
                staffId = getStaffId(conn, user);
                System.out.println("Staff ID: " + staffId);
                new AccountHomePage().setVisible(true);
                dispose();
            }
            else if (staffPermissions != 0 && Arrays.asList(nurseStaffTypes).contains(staffPermissions)) {
//                JOptionPane.showMessageDialog(this, "You typed the correct password. You will now be logged in with nurse permissions.");
                
                staffId = getStaffId(conn, user);
                System.out.println("Staff ID: " + staffId);
                new NurseWorkLoggingAcc().setVisible(true);
                dispose();
            }

        } 
        else {
            JOptionPane.showMessageDialog(this, "Invalid username/password combination, try again");
        }

        //Zero out the possible password, for security, so java code not storing it in a variable
        Arrays.fill(pass, '0'); 
        passwordField.selectAll();    
    }//GEN-LAST:event_loginButtonActionPerformed
            
    protected static Integer getStaffType(Connection conn, String user) {
        Integer staffType = 0;
        try {
            Statement selectStaffTypeStmt = conn.createStatement();     // initialize statement
            ResultSet rs = selectStaffTypeStmt.executeQuery(String.format("SELECT StaffType_ID FROM Staff WHERE Unique_ID = '%s'", user));     // use statement to execute query (get staff type of username enetered) 
            while (rs.next()) {
                staffType = rs.getInt(1);
                System.out.println("staffType: " + staffType);
            }
        }
        catch (SQLException e) {
            System.out.println("SQL Exception caught: " + e.getMessage());
        }
        return staffType;
    }
    
    protected static String getPassword(Connection conn, String user) {
        String password = "";
        try {
            Statement selectPasswordStmt = conn.createStatement();     // initialize statement
            ResultSet rs = selectPasswordStmt.executeQuery(String.format("SELECT Password FROM Staff WHERE Unique_ID = '%s'", user)); 
            while (rs.next()) {
                password = rs.getString(1);
                System.out.println("password: " + password);
            }
        }    
        catch (SQLException e) {
            System.out.println("SQL Exception caught: " + e.getMessage());
        }
        return password;
    }
    
    protected static boolean isPasswordCorrect(Connection conn, String user, char[] input) {     // https://docs.oracle.com/javase/tutorial/uiswing/components/passwordfield.html
        boolean isCorrect = false;
        Integer staffType = getStaffType(conn, user);
        String password = getPassword(conn, user);
    
        char[] correctPassword = new char[password.length()];   // user entered pw is array so we create array of DB gathered pw to compare
        for (int i = 0; i < password.length(); i++) { 
            correctPassword[i] = password.charAt(i); 
        }
        isCorrect = Arrays.equals (input, correctPassword);     // bool isCorrect = are they identical
        Arrays.fill(correctPassword,'0');   // zero out password so java code not storing it in variable
        return isCorrect;
    }
    
    protected static Integer getStaffId(Connection conn, String user){
        int id = 0;
        try{
            Statement selectStaffTypeStmt = conn.createStatement();     // initialize statement
            ResultSet rs = selectStaffTypeStmt.executeQuery(String.format("SELECT Staff_ID FROM Staff WHERE Unique_ID = '%s'", user));     // use statement to execute query (get staff id of username entered)
            while (rs.next()) {
                id = rs.getInt(1);
                System.out.println("staffID: " + id);
            }
        } catch (SQLException e) {
            System.out.println("SQL Exception caught in getStaffId: " + e.getMessage());
        }
        return id;
    }
    
    protected void populateAdminStaffTypes() {
        Integer countAdmins = 0;
        try {
            Statement s = conn.createStatement();     // initialize statement
            ResultSet rsCount = s.executeQuery("SELECT count (StaffType_ID) FROM StaffType WHERE StaffTypeName = 'CNM' OR StaffTypeName = 'ADON' OR StaffTypeName = 'DON'");
            while (rsCount.next()) {
                countAdmins = rsCount.getInt(1);
            }
            adminStaffTypes = new Integer [countAdmins];
            
            ResultSet rs = s.executeQuery("SELECT StaffType_ID FROM StaffType WHERE StaffTypeName = 'CNM' OR StaffTypeName = 'ADON' OR StaffTypeName = 'DON'");
            for (int i = 0; i < countAdmins; i ++) {
                if (rs.next() && countAdmins != 0) {
                    int staffTypeID = rs.getInt(1);
                    adminStaffTypes[i] = staffTypeID;
                }
            }
        }    
        catch (SQLException e) {
            System.out.println("SQL Exception caught: " + e.getMessage());
        }
    }
    
    protected void populateNurseStaffTypes() {
        Integer countNurses = 0;
        try {
            Statement s = conn.createStatement();     // initialize statement
            ResultSet rsCount = s.executeQuery("SELECT count (StaffType_ID) FROM StaffType WHERE StaffTypeName = 'RN' OR StaffTypeName = 'StdN' OR StaffTypeName = 'HCA'");
            while (rsCount.next()) {
                countNurses = rsCount.getInt(1);
            }
            nurseStaffTypes = new Integer [countNurses];
            
            ResultSet rs = s.executeQuery("SELECT StaffType_ID FROM StaffType WHERE StaffTypeName = 'RN' OR StaffTypeName = 'StdN' OR StaffTypeName = 'HCA'");
            for (int i = 0; i < countNurses; i ++) {
                if (rs.next() && countNurses != 0) {
                    int staffTypeID = rs.getInt(1);
                    nurseStaffTypes[i] = staffTypeID;
                }
            }
        }    
        catch (SQLException e) {
            System.out.println("SQL Exception caught: " + e.getMessage());
        }
    }
        
    private void passwordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HomePage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bg;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton loginButton;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JTextField usernameField;
    private javax.swing.JLabel usernameLabel;
    // End of variables declaration//GEN-END:variables
}
